// Gerekli paketleri iÃ§e aktar
const express = require('express');       // Express framework: API sunucusu kurmak iÃ§in
const cors = require('cors');             // CORS middleware: frontend-backend iletiÅŸimine izin verir
const dotenv = require('dotenv');         // .env dosyasÄ±ndan Ã§evresel deÄŸiÅŸkenleri okumak iÃ§in

// .env dosyasÄ±ndaki deÄŸiÅŸkenleri process.env iÃ§ine yÃ¼kle
dotenv.config();

// Express uygulamasÄ±nÄ± baÅŸlat
const app = express();

// TÃ¼m gelen isteklerde CORS kontrolÃ¼nÃ¼ aktif et
app.use(cors());

// Gelen isteklerin gÃ¶vdesindeki JSON verilerini okuyabilmek iÃ§in
app.use(express.json());

//auth route dosyasÄ±nÄ± dahil ediyoruz
const authRoutes = require('./routes/auth.routes');
const testRoutes = require('./routes/test.routes');
const leaveRoutes = require('./routes/leave.routes');
const managerRoutes = require('./routes/manager.routes');
const hrRoutes = require('./routes/hr.routes');

//routeâ€™u kaydediyoruz: /api/auth altÄ±ndaki tÃ¼m istekler authRoutes iÃ§inde tanÄ±mlanacak
app.use('/api/auth' , authRoutes);
app.use('/api/test', testRoutes);
app.use('/api/leave', leaveRoutes);
app.use('/api/manager', managerRoutes);
app.use('/api/hr', hrRoutes);

app.get('/', (req, res) => {
  res.send('API Ã§alÄ±ÅŸÄ±yor ğŸš€');
});

app.get('/api/test', (req, res) => {
  res.json({ message: 'Test baÅŸarÄ±lÄ±!' });
});


// Bu app nesnesini dÄ±ÅŸa aktar â€“ index.js dosyasÄ±nda kullanacaÄŸÄ±z
module.exports = app;
